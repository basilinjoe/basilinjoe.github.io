{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","figlet","parseFont","standard","term","Terminal","fitAddon","FitAddon","loadAddon","doc","document","getElementById","open","fit","focus","text","font","whitespaceBreak","err","str","split","forEach","x","writeln","console","log","setOption","tprompt","write","cmd","onKey","e","ev","domEvent","printable","altKey","ctrlKey","metaKey","keyCode","clear","buffer","active","cursorX","key","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iOAAe,I,uDCiEAA,MAxDf,WA0CE,OAzCAC,qBAAU,WACRC,IAAOC,UAAU,WAAYC,KAC7B,IAAIC,EAAO,IAAIC,WACTC,EAAW,IAAIC,WACrBH,EAAKI,UAAUF,GACf,IAAIG,EAAMC,SAASC,eAAe,YAClCP,EAAKQ,KAAKH,GACVH,EAASO,MACTT,EAAKU,QACLb,IAAOc,KAAK,cAAe,CACzBC,KAAK,WACLC,iBAAiB,IAChB,SAACC,EAAKC,GACGA,EAAIC,MAAM,MAAMC,SAAQ,SAAAC,GAAC,OAAElB,EAAKmB,QAAQD,MAClDE,QAAQC,IAAIN,MAEdf,EAAKsB,UAAU,eAAe,GAC9B,IAAIC,EAAU,kBAAMvB,EAAKwB,MAAM,WAC/BD,IACA,IAAIE,EAAM,GACVzB,EAAK0B,OAAM,SAACC,GACV,IAAMC,EAAKD,EAAEE,SACPC,GAAaF,EAAGG,SAAWH,EAAGI,UAAYJ,EAAGK,QAEhC,KAAfL,EAAGM,SACO,UAART,GACFzB,EAAKmC,QAEPV,EAAM,GACNF,KACwB,IAAfK,EAAGM,QAERlC,EAAKoC,OAAOC,OAAOC,QAAU,GAC/BtC,EAAKwB,MAAM,SAEJM,IACTL,GAAOE,EAAEY,IACTvC,EAAKwB,MAAMG,EAAEY,YAKjB,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,oBAGA,sBAAMA,UAAU,SAEhB,wBAAQA,UAAU,SAAlB,SACE,qBAAKC,GAAG,mBC/CDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASC,eAAe,SAM1BmC,M","file":"static/js/main.fe71d888.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport \"xterm/css/xterm.css\";\nimport React, { useEffect } from 'react';\nimport { Terminal } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport figlet from 'figlet';\nimport standard from 'figlet/importable-fonts/Standard.js'\n\nfunction App() {\n  useEffect(() => {\n    figlet.parseFont('Standard', standard);\n    let term = new Terminal();\n    const fitAddon = new FitAddon();\n    term.loadAddon(fitAddon);\n    let doc = document.getElementById('terminal');\n    term.open(doc);\n    fitAddon.fit();\n    term.focus();\n    figlet.text(\"Basilin Joe\", {\n      font:'Standard',\n      whitespaceBreak: true\n    }, (err, str) => {\n      let res = str.split('\\n').forEach(x=>term.writeln(x));\n      console.log(str);\n    });\n    term.setOption('cursorBlink', true);\n    let tprompt = () => term.write('\\r\\n$ ');\n    tprompt();\n    let cmd = '';\n    term.onKey((e) => {\n      const ev = e.domEvent;\n      const printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n\n      if (ev.keyCode === 13) {\n        if (cmd === 'clear') {\n          term.clear();\n        }\n        cmd = '';\n        tprompt();\n      } else if (ev.keyCode === 8) {\n        // Do not delete the prompt\n        if (term.buffer.active.cursorX > 2) {\n          term.write('\\b \\b');\n        }\n      } else if (printable) {\n        cmd += e.key;\n        term.write(e.key);\n      }\n    });\n  });\n  return (\n    <div className=\"App\">\n      <header className=\"shrink\">\n        Header\n      </header>\n      <main className=\"grow\">\n      </main>\n      <footer className=\"shrink\">\n        <div id=\"terminal\"></div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}